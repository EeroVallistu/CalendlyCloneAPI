openapi: 3.0.0
info:
  title: Calendly Clone API
  description: API for scheduling and managing appointments
  version: 1.0.0
servers:
  - url: /
paths:
  /users:
    get:
      summary: List all users
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /users/{userId}:
    get:
      summary: Get user details
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /events:
    post:
      summary: Create a new event type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
      responses:
        '201':
          description: Event type created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'

  /events/{eventId}:
    get:
      summary: Get event details
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'

  /schedules:
    post:
      summary: Create a new schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
      responses:
        '201':
          description: Schedule created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'

  /schedules/{userId}:
    get:
      summary: Get user's schedule
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User's schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'

  /appointments:
    post:
      summary: Schedule an appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '201':
          description: Appointment scheduled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'

components:
  schemas:
    Pagination:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
        pageSize:
          type: integer
          minimum: 1
        total:
          type: integer
          minimum: 0
      required:
        - page
        - pageSize
        - total

    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        timezone:
          type: string
      required:
        - id
        - name
        - email

    EventType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        duration:
          type: integer
        description:
          type: string
        color:
          type: string
      required:
        - name
        - duration

    Schedule:
      type: object
      properties:
        userId:
          type: string
        availability:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
      required:
        - userId
        - availability

    TimeSlot:
      type: object
      properties:
        day:
          type: string
          enum: [monday, tuesday, wednesday, thursday, friday, saturday, sunday]
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time

    Appointment:
      type: object
      properties:
        id:
          type: string
        eventId:
          type: string
        userId:
          type: string
        inviteeEmail:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          type: string
          enum: [scheduled, canceled, completed]
      required:
        - eventId
        - userId
        - inviteeEmail
        - startTime

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  message:
                    type: string 