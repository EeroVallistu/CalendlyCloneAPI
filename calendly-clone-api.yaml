openapi: 3.0.0
info:
  title: Calendly Clone API
  description: API for scheduling and managing appointments
  version: 1.0.0
servers:
  - url: /
paths:
  /users:
    get:
      security:
        - BearerAuth: []
      tags:
        - Users
      summary: List all users
      description: Retrieve a paginated list of all users.
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number to retrieve.
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: The number of users to return per page.
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Invalid pagination parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      security:
        - BearerAuth: []
      tags:
        - Users
      summary: Create a new user
      description: Create a new user with a name, email, password, and optional timezone.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /users/{userId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Users
      summary: Get user details
      description: Retrieve details of a specific user by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to retrieve.
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      security:
        - BearerAuth: []
      tags:
        - Users
      summary: Partially update a user
      description: Update specific fields of a user by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        - BearerAuth: []
      tags:
        - Users
      summary: Delete a user
      description: Delete a specific user by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user to delete.
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /events:
    post:
      security:
        - BearerAuth: []
      tags:
        - Events
      summary: Create a new event type
      description: Create a new event type with a name, duration, and optional details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
      responses:
        '201':
          description: Event type created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /events/{eventId}:
    get:
      tags:
        - Events
      summary: Get event details
      description: Retrieve details of a specific event by its ID.
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the event to retrieve.
      responses:
        '200':
          description: Event details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      security:
        - BearerAuth: []
      tags:
        - Events
      summary: Partially update an event
      description: Update specific fields of an event by its ID.
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the event to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventType'
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventType'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        - BearerAuth: []
      tags:
        - Events
      summary: Delete an event
      description: Delete a specific event by its ID.
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the event to delete.
      responses:
        '204':
          description: Event deleted successfully
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /schedules:
    post:
      security:
        - BearerAuth: []
      tags:
        - Schedules
      summary: Create a new schedule
      description: Create a new schedule for a user with their availability.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleInput'
      responses:
        '201':
          description: Schedule created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /schedules/{userId}:
    get:
      tags:
        - Schedules
      summary: Get user's schedule
      description: Retrieve the schedule for a specific user by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user whose schedule to retrieve.
      responses:
        '200':
          description: User's schedule retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      security:
        - BearerAuth: []
      tags:
        - Schedules
      summary: Partially update a user's schedule
      description: Update specific fields of a user's schedule by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user whose schedule to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleInput'
      responses:
        '200':
          description: Schedule updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        - BearerAuth: []
      tags:
        - Schedules
      summary: Delete a schedule
      description: Delete the schedule for a specific user by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the user whose schedule to delete.
      responses:
        '204':
          description: Schedule deleted successfully
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /appointments:
    post:
      security:
        - BearerAuth: []
      tags:
        - Appointments
      summary: Schedule an appointment
      description: Schedule a new appointment for an event with a user and invitee.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '201':
          description: Appointment scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Appointments
      summary: List all appointments
      description: Retrieve a list of all appointments.
      responses:
        '200':
          description: List of appointments retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /appointments/{appointmentId}:
    patch:
      security:
        - BearerAuth: []
      tags:
        - Appointments
      summary: Partially update an appointment
      description: Update specific fields of an appointment by its ID.
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the appointment to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: Appointment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Appointment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      security:
        - BearerAuth: []
      tags:
        - Appointments
      summary: Delete an appointment
      description: Delete a specific appointment by its ID.
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the appointment to delete.
      responses:
        '204':
          description: Appointment deleted successfully
        '404':
          description: Appointment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Appointments
      summary: Get appointment details
      description: Retrieve details of a specific appointment by its ID.
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the appointment to retrieve.
      responses:
        '200':
          description: Appointment details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: Appointment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    Pagination:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
        pageSize:
          type: integer
          minimum: 1
        total:
          type: integer
          minimum: 0
      required:
        - page
        - pageSize
        - total

    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        timezone:
          type: string
      required:
        - id
        - name
        - email
        - password

    EventType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        duration:
          type: integer
        description:
          type: string
        color:
          type: string
      required:
        - name
        - duration

    Schedule:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        availability:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
      required:
        - id
        - userId
        - availability

    ScheduleInput:
      type: object
      properties:
        userId:
          type: string
        availability:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
      required:
        - userId
        - availability

    TimeSlot:
      type: object
      properties:
        day:
          type: string
          enum: [monday, tuesday, wednesday, thursday, friday, saturday, sunday]
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
      required:
        - day
        - startTime
        - endTime

    Appointment:
      type: object
      properties:
        id:
          type: string
        eventId:
          type: string
        userId:
          type: string
        inviteeEmail:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        status:
          type: string
          enum: [scheduled, canceled, completed]
      required:
        - eventId
        - userId
        - inviteeEmail
        - startTime

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: string
      required:
        - error

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 